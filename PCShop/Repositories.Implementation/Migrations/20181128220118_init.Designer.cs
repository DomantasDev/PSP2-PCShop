// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Implementation;

namespace Repositories.Implementation.Migrations
{
    [DbContext(typeof(PcContext))]
    [Migration("20181128220118_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Contracts.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<decimal>("CashBalance");

                    b.Property<string>("Email");

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasDiscriminator<string>("Type").HasValue("Client");
                });

            modelBuilder.Entity("Models.Contracts.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClientId");

                    b.Property<string>("DestinationCountry");

                    b.Property<DateTime>("EstimatedDelivery");

                    b.Property<Guid>("PcId");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("PcId");

                    b.ToTable("Orders");

                    b.HasDiscriminator<string>("Type").HasValue("Order");
                });

            modelBuilder.Entity("Models.Contracts.Pc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CPU");

                    b.Property<string>("GPU");

                    b.Property<string>("Name");

                    b.Property<string>("OS");

                    b.Property<decimal>("Price");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Pcs");

                    b.HasDiscriminator<string>("Type").HasValue("Pc");
                });

            modelBuilder.Entity("Models.Implementation.BasicClient", b =>
                {
                    b.HasBaseType("Models.Contracts.Client");


                    b.ToTable("BasicClient");

                    b.HasDiscriminator().HasValue("BASIC");
                });

            modelBuilder.Entity("Models.Implementation.VIPClient", b =>
                {
                    b.HasBaseType("Models.Contracts.Client");


                    b.ToTable("VIPClient");

                    b.HasDiscriminator().HasValue("VIP");
                });

            modelBuilder.Entity("Models.Implementation.BasicOrder", b =>
                {
                    b.HasBaseType("Models.Contracts.Order");


                    b.ToTable("BasicOrder");

                    b.HasDiscriminator().HasValue("BASIC");
                });

            modelBuilder.Entity("Models.Implementation.VIPOrder", b =>
                {
                    b.HasBaseType("Models.Contracts.Order");


                    b.ToTable("VIPOrder");

                    b.HasDiscriminator().HasValue("VIP");
                });

            modelBuilder.Entity("Models.Implementation.LinuxPc", b =>
                {
                    b.HasBaseType("Models.Contracts.Pc");


                    b.ToTable("LinuxPc");

                    b.HasDiscriminator().HasValue("LINUX");
                });

            modelBuilder.Entity("Models.Implementation.WindowsPc", b =>
                {
                    b.HasBaseType("Models.Contracts.Pc");


                    b.ToTable("WindowsPc");

                    b.HasDiscriminator().HasValue("WINDOWS");
                });

            modelBuilder.Entity("Models.Contracts.Order", b =>
                {
                    b.HasOne("Models.Contracts.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Models.Contracts.Pc", "Pc")
                        .WithMany("Orders")
                        .HasForeignKey("PcId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
